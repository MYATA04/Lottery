from aiogram import F, Router, exceptions
from aiogram.enums import ParseMode
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from app.filters import IsAdmin
from app.fsm import FSMAdmin
from app.keyboards.admin_kb import RKB
from app.texts.functions import get_message, send_message_to_user, set_message
from app.texts.texts import CLIENTS_TEXTS

router = Router()


@router.message(FSMAdmin.edit_text_1, IsAdmin())
async def edit_text_1(message: Message, state: FSMContext) -> None:
    await message.delete()

    photo_path = None

    if message.text == "–°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ":
        text = ('<i>–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∏—Ç—Å—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –∏ –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç '
                '—Ç–µ–∫—Å—Ç–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É: "üîñ –ü–µ—Ä–µ–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"')
        await message.answer(text=text)

        name = "start_client"

        photo_path = "medias/start_admin.png"

    elif message.text == "–°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª":
        text = '<i>–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∏—Ç—Å—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É: "üìë –ü—Ä–∞–≤–∏–ª–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–∞"</i>'
        await message.answer(text=text)

        name = "rules_client"

    elif message.text == "–°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤":
        text = '<i>–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∏—Ç—Å—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É: "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"</i>'
        await message.answer(text=text)

        name = "admins_contacts_client"

    elif message.text == "–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π":
        text = ("<i>–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∏—Ç—Å—è –ø–æ–±–µ–¥–∏–≤—à–∏–º –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º, –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –±—É–¥—É—Ç –∫—É–ø–ª–µ–Ω—ã –≤—Å–µ "
                "–Ω–æ–º–µ—Ä–∫–∏</i>")
        await message.answer(text=text)

        name = "winners_client"

    elif message.text == "–°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ–∏–≥—Ä–∞–≤—à–∏—Ö":
        text = ("<i>–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∏—Ç—Å—è –ø—Ä–æ–∏–≥—Ä–∞–≤—à–∏–º –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º, –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –±—É–¥—É—Ç –∫—É–ø–ª–µ–Ω—ã –≤—Å–µ "
                "–Ω–æ–º–µ—Ä–∫–∏</i>")
        await message.answer(text=text)

        name = "losed_client"

    elif message.text == "–°–æ–æ–±—â–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞":
        text = ("<i>–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, —É –∫–æ—Ç–æ—Ä—ã—Ö –≤–∫–ª—é—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ "
                "–±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à</i>")
        await message.answer(text=text)

        name = "lottery_created_client"

    elif message.text == "–°–æ–æ–±—â–µ–Ω–∏–µ —Å–ø—Ä–æ—Å–∞ –∞–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏":
        text = ("<i>–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—é —Ä–æ–∑—ã–≥—Ä—ã—à–∞, –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –æ–Ω –Ω–∞—á–Ω–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π "
                "–∞–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏</i>")
        await message.answer(text=text)

        name = "request_adress"

    elif message.text == "–°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–∏—è –∞–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏":
        text = "<i>–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—é —Ä–æ–∑—ã–≥—Ä—ã—à–∞, –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –æ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç –∞–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏</i>"
        await message.answer(text=text)

        name = "response_adress"

    else:
        return

    await state.set_state(FSMAdmin.edit_text_2)

    text = CLIENTS_TEXTS[name]

    await send_message_to_user(chat_id=message.chat.id,
                               name=name,
                               text=text,
                               photo_path=photo_path)

    await state.update_data(name=name)

    text = (f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {message.text}\n"
            f"–°–≤–µ—Ä—Ö—É –≤—ã –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ üëÜ\n\n"
            f'–°–ø–µ—Ä–≤–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è. –≠—Ç–æ—Ç –ø—É–Ω–∫—Ç –º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å, –Ω–∞–∂–∞–≤ —Å–Ω–∏–∑—É –Ω–∞ –∫–Ω–æ–ø–∫—É '
            f'"<code>–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å ‚è≠</code>, —á—Ç–æ –±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –∫–∞–∫ –µ—Å—Ç—å, '
            f'–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "<code>üóë –£–±—Ä–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É</code>", —á—Ç–æ –±—ã —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –±–µ–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏. '
            '–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –Ω–∞–∂–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É "<code>üîñ –ü–µ—Ä–µ–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</code>"')

    await message.answer(text=text, reply_markup=await RKB.skip_or_delete_photo())


@router.message(FSMAdmin.edit_text_2, IsAdmin())
async def edit_text_2(message: Message, state: FSMContext) -> None:
    if message.photo:
        photo = message.photo[-1].file_id

    elif message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å ‚è≠":
        data = await state.get_data()
        data_message = await get_message(data["name"])
        photo = data_message.get("photo", "")

    elif message.text == "üóë –£–±—Ä–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É":
        photo = ""

    else:
        await message.answer(text="<b>–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ üü°</b>",
                             reply_markup=await RKB.back())
        return

    await state.update_data(photo=photo)
    await state.set_state(FSMAdmin.edit_text_3)

    text = "–ê —Ç–µ–ø–µ—Ä—å, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:"

    await message.answer(text=text, reply_markup=await RKB.back())


@router.message(FSMAdmin.edit_text_3, IsAdmin())
async def edit_text_3(message: Message, state: FSMContext) -> None:
    if message.text is None:
        await message.answer(text="<b>–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ üü°</b>",
                             reply_markup=await RKB.back())
        return

    text = message.md_text

    data = await state.get_data()
    photo = data.get("photo", "")

    try:
        if photo:
            await message.answer_photo(photo=photo, caption=text, parse_mode=ParseMode.MARKDOWN_V2)

        else:
            await message.answer(text=text, parse_mode=ParseMode.MARKDOWN_V2)

    except exceptions.TelegramBadRequest:
        await message.answer(text="<b>–¢–µ–∫—Å—Ç –ø–æ–¥ –∫–∞—Ä—Ç–∏–Ω–∫–æ–π —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ üü°</b>",
                             reply_markup=await RKB.back())
        return

    await state.update_data(text=text)
    await state.set_state(FSMAdmin.edit_text_4)

    text = "–ê —Ç–µ–ø–µ—Ä—å, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ, –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ:"

    await message.answer(text=text, reply_markup=await RKB.concan())


@router.message(F.text.in_(["–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", "–û—Ç–º–µ–Ω–∏—Ç—å"]), IsAdmin(), FSMAdmin.edit_text_4)
async def edit_text_4(message: Message, state: FSMContext) -> None:
    data = await state.get_data()
    name = data.get("name")
    text = data.get("text")
    photo = data.get("photo", "")

    if message.text == "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å":
        await set_message(name=name, text=text, photo=photo)

        text = "<i><b>üìù –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ üü¢</b></i>"
        markup = await RKB.main_commands()

        await message.answer(text=text, reply_markup=markup)

    else:
        text = "<b><i>üìù –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ üî¥</i></b>"
        markup = await RKB.main_commands()

        await message.answer(text=text, reply_markup=markup)

    await state.set_state(FSMAdmin.passive)
